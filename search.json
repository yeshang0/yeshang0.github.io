[{"title":"黑名单Blacklist","url":"/2024/02/06/黑名单Blacklist/","content":"\n# 本文用来存放枫叶的黑名单\n\n## QQ：xxxxxxxxxx","tags":["枫叶的小本本"]},{"title":"Hexo搭建博客教程02","url":"/2024/02/04/hexo02/","content":"\n# Hexo搭建博客教程02\n\n## 1.切换主题\n\nHexo自带的主题无疑是朴实无华的，而Hexo有着丰富的主题可供选择，下面教大家如何切换主题以及我的一些心得和踩过的坑\n\n### 选择主题\n\n首先 访问[Hexo主题]([Themes | Hexo](https://hexo.io/themes/)) 找到自己喜欢的主题，我这里以我目前使用的主题[Reimu:一款博丽灵梦风格的Hexo主题](https://github.com/D-Sketon/hexo-theme-reimu)为例，讲解如何使用主题\n\n![](https://pan.mybailu.cn/f/laXC3/PixPin_2024-02-04_16-11-14.png)\n\n### 安装主题\n\n在博客的 **themes目录** 下执行\n\n```\ngit clone https://github.com/D-Sketon/hexo-theme-reimu.git\n```\n\n![](https://pan.mybailu.cn/f/9gjTb/PixPin_2024-02-04_16-18-07.png)\n\n### 应用主题\n\n将**hexo-theme-reimu**修改为**reimu**\n\n![](https://pan.mybailu.cn/f/eWvIe/PixPin_2024-02-04_16-20-10.png)\n\n回到博客根目录，打开 **_config.yaml**\n\n![](https://pan.mybailu.cn/f/01QUg/PixPin_2024-02-04_16-21-32.png)\n\n找到 **theme** 修改为\n\n```\ntheme: reimu\n```\n\n![](https://pan.mybailu.cn/f/g7jij/PixPin_2024-02-04_16-23-27.png)\n\n### 安装插件\n\n因为这个主题用了很多Hexo本体没有安装的插件。所以需要另外安装\n\n回到博客根目录，执行\n\n```\nnpm install js-yaml hexo-util hexo-fs \n```\n\n安装了pnpm的可以执行\n\n```\npnpm install js-yaml hexo-util hexo-fs \n```\n\n二选一即可\n\n![](https://pan.mybailu.cn/f/Q1rFN/PixPin_2024-02-04_16-27-45.png)\n\n### 运行服务\n\n执行\n\n```\nhexo s\n```\n\n开启服务\n\n![](https://pan.mybailu.cn/f/BnQhx/PixPin_2024-02-04_16-29-28.png)\n\n如此，访问 [127.0.0.1](127.0.0.1) 即可看到你的博客了！\n\n![](https://pan.mybailu.cn/f/ZnySq/PixPin_2024-02-04_16-30-57.png)\n\n### 修改主题\n\n这里作者已经给出详细的说明了，下面是我搬运作者说明\n\n## 主题说明\n\n### 基本结构\n\n为了保证显示正确，请参考 `_example` 在 `_source` 中分别建立 `_data`、`about` 和 `friend` 文件夹\n\n#### _data\n\n- `avatar` 文件夹中存储作者头像，默认命名 `avatar.jpg`，可在 内层 `_config.yml` 中做如下配置\n\n```\navatar: \"avatar.jpg\" # 默认就是在avatar文件夹内寻找，请不要包含路径，否则会404\n```\n\n- `covers` 文件夹中存储文章封面\n- `covers.yml` 中存储文章封面 url\n\n#### about\n\n`index.md` 作为**关于**页面\n\n#### friend\n\n`index.md` 作为**友链**页面，在 `_data.yml` 中填入友链信息即可在页面上显示对应好友卡片\n\n### 封面、头图和图标\n\n#### 封面\n\n封面显示逻辑如下\n\n- 如果文章的 Front matter 中包含 cover 的 url，则该文章头图和首页缩略图均显示该 url\n\n```\n---\ntitle: Hello World\ncover: https://example.com\n---\n```\n\n- 如果文章的 Front matter 中包含 cover 为 `false`，则该文章不显示头图（首页上仍然是随机图片）\n\n```\n---\ntitle: Hello World\ncover: false\n---\n```\n\n- 如果文章的 Front matter 中包含 cover 为 `rgb(xxx,xxx,xxx)`，则该文章头图为对应的渐变纯色（首页上仍然是随机图片）\n\n```\n---\ntitle: Hello World\ncover: rgb(255,117,117)\n---\n```\n\n- 否则查找 `covers` 文件夹和 `covers.yml`，并从中随机挑选图片\n- 若上述文件均不存在，则显示头图\n\n#### 头图\n\n头图保存于 `themes/reimu/source/images/banner.jpg`，可在内层 `_config.yml` 中修改\n\n```\nbanner: \"/images/banner.jpg\"\n```\n\n#### 图标\n\n图标保存于 `themes/reimu/source/images/favicon.ico`，可在内层 `_config.yml` 中修改\n\n```\nfavicon: \"/images/favicon.ico\"\n```\n\n#### 置顶\n\n在文章的 Front-matter 中添加 `sticky: true`\n\n```\n---\ntitle: Hello World\nsticky: true\n---\n```\n\n### 代码高亮\n\n为保证代码块的正确显示，请保证外层 `_config.yml` 中为如下配置 (<7.0.0)\n\n```\nhighlight:\n  enable: true\n  wrap: true\n  hljs: false\nprismjs:\n  enable: false\n```\n\n(>=7.0.0)\n\n```\nsyntax_highlighter: highlight.js\nhighlight:\n  wrap: true\n  hljs: false\n```\n\n### 站内评论\n\n若基于 [Valine](https://valine.js.org/)\n请参考其官方文档完成 `LeanCloud` 的配置，并在内层 `_config_yml` 中将 `valine.enable` 改为 `true`，并填入自己的 `appId` 和 `appKey`\n\n```\nvaline:\n  enable: true\n  appId: \"your appId\"\n  appKey: \"your appKey\"\n```\n\n若基于 [Waline](https://waline.js.org/)\n请参考其[官方文档](https://waline.js.org/guide/get-started/)完成 `LeanCloud` 的配置，并在内层 `_config_yml` 中将 `waline.enable` 改为 `true`，并填入自己的 `serverURL`\n\n```\nwaline:\n  enable: true\n  serverURL: \"your server url\"\n  lang: zh-CN\n  locale: {} # https://waline.js.org/guide/features/i18n.html#%E8%87%AA%E5%AE%9A%E4%B9%89%E8%AF%AD%E8%A8%80\n  emoji:\n    - https://unpkg.com/@waline/emojis@1.2.0/weibo\n    - https://unpkg.com/@waline/emojis@1.2.0/alus\n    - https://unpkg.com/@waline/emojis@1.2.0/bilibili\n    - https://unpkg.com/@waline/emojis@1.2.0/qq\n    - https://unpkg.com/@waline/emojis@1.2.0/tieba\n    - https://unpkg.com/@waline/emojis@1.2.0/tw-emoji\n  meta:\n    - nick\n    - mail\n    - link\n  requiredMeta:\n    - nick\n    - mail\n  wordLimit: 0\n  pageSize: 10\n  pageview: true\n```\n\n若基于 [twikoo](https://twikoo.js.org/)\n请参考其[官方文档](https://twikoo.js.org/quick-start.html)完成 腾讯云 或 Vercel 部署，并在内层 `_config_yml` 中将 `twikoo.enable` 改为 `true`，并填入自己的 `envId`\n\n```\ntwikoo:\n  enable: true\n  envId: # 腾讯云环境填 envId；Vercel 环境填地址（https://xxx.vercel.app）\n  region:\n```\n\n### 站内搜索\n\n若选择 [Algolia](https://www.algolia.com/)，请安装 [hexo-algoliasearch](https://github.com/LouisBarranqueiro/hexo-algoliasearch)\n\n```\nnpm install hexo-algoliasearch --save\n```\n\n并参考其 [README](https://github.com/LouisBarranqueiro/hexo-algoliasearch#readme) 完成对 `Algolia` 账号的配置，并在外层 `_confg.yml` 中添加如下配置\n\n```\nalgolia:\n  appId: \"your applicationID\"\n  apiKey: \"your apiKey\"\n  adminApiKey: \"your adminApiKey\"\n  indexName: \"your indexName\"\n  chunkSize: 5000\n  fields:\n    - content:strip:truncate,0,500\n    - excerpt:strip\n    - gallery\n    - permalink\n    - photos\n    - slug\n    - tags\n    - title\n```\n\n在内层 `_config_yml` 中将 `algolia_search.enable` 改为 `true`\n\n```\nalgolia_search:\n  enable: true\n```\n\n注意：搜索跳转链接为永久链接，所以请保证外层 `_config.yml` 中的 `url` 填写正确\n\n若选择 [hexo-generator-search](https://github.com/wzpan/hexo-generator-search)，请安装[hexo-generator-search](https://github.com/wzpan/hexo-generator-search)\n\n并参考其 [README](https://github.com/wzpan/hexo-generator-search#readme)在外层 `_config.yml` 中添加如下配置\n\n```\nsearch:\n  path: search.json # 文件名必须为search.json\n  field: post\n  content: true\n```\n\n在内层 `_config_yml` 中将 `generator_search.enable` 改为 `true`\n\n```\ngenerator_search:\n  enable: true\n```\n\n### 数学公式\n\n数学公式基于 [Katex](https://github.com/KaTeX/KaTeX)，请安装 [hexo-renderer-markdown-it-plus](https://github.com/CHENXCHEN/hexo-renderer-markdown-it-plus)\n\n```\nnpm uninstall hexo-renderer-marked --save\nnpm install hexo-renderer-markdown-it-plus --save\n```\n\n在内层 `_config_yml` 中将 `math.enable` 改为 `true`\n\n```\nmath:\n  enable: true\n```\n\n### Mermaid\n\n请安装 [hexo-filter-mermaid-diagrams](https://github.com/webappdevelp/hexo-filter-mermaid-diagrams)\n\n```\nnpm install hexo-filter-mermaid-diagrams --save\n```\n\n在内层 `_config_yml` 中将 `mermaid.enable` 改为 `true`\n\n```\nmermaid:\n  enable: true\n```\n\n### RSS\n\n请安装 [hexo-generator-feed](https://github.com/hexojs/hexo-generator-feed)\n\n```\nnpm install hexo-generator-feed --save\n```\n\n并参考其 [README](https://github.com/hexojs/hexo-generator-feed#readme) 在外层 `_config.yml` 完成对 `feed` 的配置\n在内层 `_config.yml` 中填入生成的 `xml`\n\n```\nrss: atom.xml\n```\n\n### 实验性功能\n\n#### firework\n\n默认开启\n\n```\nfirework:\n  enable: true\n```\n\n具体配置请查看 [mouse-firework](https://github.com/D-Sketon/mouse-firework)\n\n#### pjax\n\n默认关闭\n\n```\npjax:\n  enable: false\n```\n\n> pjax 在 v0.0.10 中被引入，用于那些需要添加音乐播放器等需要 SPA 的用户。但其仍然属于实验性质，引入后可能会出现诸如**脚本无法执行**、**脚本重复执行**、**页面渲染混乱**等 BUG。请慎重考虑！\n\n#### PWA\n\n默认开启\n\n```\nservice_worker:\n  enable: true\n```\n\n#### live2d\n\n默认关闭\n\n```\nlive2d:\n  enable: false\n```","tags":["建站"]},{"title":"Hexo搭建博客基础教程 01","url":"/2024/02/04/hexo01/","content":"\n# Hexo搭建博客基础教程 01\n\n## 一 准备工作\n\n### 1.安装[Node.js](https://nodejs.cn/download/)\n\n具体步骤可参考[Node.js 安装配置 | 菜鸟教程 (runoob.com)](https://www.runoob.com/nodejs/nodejs-install-setup.html)\n\n### 2.安装[Git ](https://git-scm.com/book/zh/v2/%E8%B5%B7%E6%AD%A5-%E5%AE%89%E8%A3%85-Git)\n\n具体步骤可参考[Git 安装配置 | 菜鸟教程 (runoob.com)](https://www.runoob.com/git/git-install-setup.html)\n\n### 3.安装pnpm(可选)(推荐)\n\n由于npm(Node.js的包管理工具)网络的不稳定性(服务器在海外)，时常会出现无法正常安装包的情况，而pnpm则不会，所以推荐安装pnpm\n\n另：pnpm 和 npm 都是 Node.js 的包管理工具，但有区别： \n\n**安装依赖时的存储方式不同**：pnpm 使用单个依赖的硬链接，而 npm 使用每个依赖的拷贝。 这意味着 pnmp 可以显著减少磁盘空间的使用。 安装速度不同：由于 pnmp 使用硬链接，因此安装速度比 npm 快得多。\n\n安装命令：npm install pnpm -g\n\n## 二 开始搭建\n\n### 1.安装Hexo\n\n打开终端(推荐Git bash here)，执行\n\n```\nnpm install -g hexo-cli\n```\n\n安装了pnpm的可以执行\n\n```\npnpm install -g hexo-cli\n```\n\n二选一即可，等待安装完成后，关闭该终端，重新开启一个终端执行\n\n```\nhexo -version\n```\n\n查看是否安装成功\n\n### 2.新建项目\n\n在你想要存放项目所在的文件夹执行\n\n```\nhexo init blog\n```\n\n若成功，则在该目录下创建了一个名为**blog**的文件夹\n\n执行\n\n```\ncd blog\n```\n\n进入该目录\n\n再执行\n\n```\nnpm install\n```\n\n安装依赖，安装了pnpm的将npm换成pnpm即可\n\n等待安装完成后，执行\n\n```\nhexo server\n```\n\n若成功，则显示在本地**4000**端口开启了一个服务\n\nCtrl + 鼠标左击 打开网页，直接打开[127.0.0.1:4000](http://yevps.icu/index.php/2024/02/04/hello-world/127.0.0.1:4000)也可\n\n如果显示\n\n![img](https://pan.mybailu.cn/f/6Rhr/PixPin_2024-01-31_23-28-19.png)\n\n那么恭喜你，你的一个最简单的，使用Hexo搭建的，基础的博客已经完成了！","tags":["建站"]},{"title":"Hello World","url":"/2024/02/04/hello-world/","content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","tags":["你好，世界"]}]